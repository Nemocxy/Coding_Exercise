{"version":3,"sources":["assets/background1.jpg","screens/HomeScreen.js","screens/DataScreen.js","navigation/tabs.js","App.js","assets/background.png"],"names":["module","exports","HomeScreen","View","style","styles","container","ImageBackground","source","require","width","height","Text","welcome","Dimensions","get","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","color","fontSize","fontWeight","paddingTop","paddingLeft","DataScreen","props","state","isLoading","dataSource","fetch","then","Response","json","responseJson","setState","movies","catch","Error","console","log","this","imageStyle","opacity","ActivityIndicator","size","map","val","key","DataTable","Row","item","Cell","numeric","id","title","releaseYear","top","maxHeight","borderRadius","Header","borderTopLeftRadius","borderTopRightRadius","Title","titles","Pagination","page","numberOfPages","onPageChange","label","showFastPagination","React","margin","borderBottomWidth","borderBottomColor","Tab","createBottomTabNavigator","Tabs","Navigator","screenOptions","route","tabBarStyle","marginBottom","marginTop","borderTopWidth","tabBarIcon","iconName","focused","name","tabBarActiveTintColor","tabBarInactiveTintColor","Screen","component","options","tabBarBadge","App","NavigationContainer"],"mappings":"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","file":"static/js/app.8147bc84.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background1.45ba87b3.jpg\";","import React from \"react\";\nimport { Text, View, StyleSheet, ImageBackground, Dimensions } from 'react-native';\n\nconst HomeScreen = () => {\n\n    return (\n        <View style={styles.container}>\n            <ImageBackground source={require('../assets/background.png')} style={{width: '100%', height: '100%'}}>\n                <Text style={styles.welcome}>Welcome back,</Text>\n                <Text style={styles.welcome}>Ting!</Text>\n            </ImageBackground>\n            \n    \n        </View>\n    );\n};\n\nexport default HomeScreen;\n\nconst width = Dimensions.get('window').width\nconst styles = StyleSheet.create ({\n    container: {\n        flex: 1,\n        backgroundColor: '#eee',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    welcome: {\n        color:'white',\n        fontSize: 50,\n        fontWeight: '600',\n        paddingTop: 50,\n        paddingLeft: width * 0.05,\n    },\n});","import * as React from 'react';\nimport { Text, View, StyleSheet, ActivityIndicator, Dimensions, ImageBackground} from 'react-native';\nimport { DataTable } from 'react-native-paper';\n\n\nexport default class DataScreen extends React.Component {\n    constructor (props) {\n        super (props);\n        this.state = {\n            isLoading: true,\n            dataSource: null,\n        }\n    }\n\n    componentDidMount () {\n        return fetch ('https://reactnative.dev/movies.json')\n                .then ((Response) => Response.json())\n                .then ((responseJson) => {\n                    this.setState ({\n                        isLoading: false,\n                        dataSource: responseJson.movies\n                    })\n                })\n        \n        .catch ((Error) => {\n            console.log(Error)\n        });\n    }\n    \n    render () {\n      \n        if (this.state.isLoading) {\n            return (\n                <View style={styles.container}>\n                    <ImageBackground source={require('../assets/background1.jpg')} style={{width: '100%', height: '100%', justifyContent: 'center'}} imageStyle={{opacity: 0.5}}>\n                        <ActivityIndicator size='large' color='white' />\n                    </ImageBackground>\n                </View>\n            );\n        } else {\n            \n            let movies = this.state.dataSource.map((val,key) => {\n                return (\n                    <DataTable.Row key={key} style={styles.item}>\n                        <DataTable.Cell style={{justifyContent: 'flex-start', flex: 0.5}} numeric>{val.id}</DataTable.Cell>\n                        <DataTable.Cell style={{justifyContent: 'flex-start', flex: 1.5}}>{val.title}</DataTable.Cell>\n                        <DataTable.Cell style={{justifyContent: 'flex-end'}} numeric>{val.releaseYear}</DataTable.Cell>\n                    </DataTable.Row>\n                    \n                )   \n            });\n\n            const width = Dimensions.get('window').width\n            const height = Dimensions.get('window').height\n            return (\n                <View style={styles.container}>\n                    <ImageBackground source={require('../assets/background1.jpg')} style={{width: '100%', height: '100%', alignItems:'center'}} imageStyle={{opacity: 0.5}}>\n                        <DataTable style={{top:15, width: width * 0.85, height: height * 0.75, maxHeight:height * 0.75, backgroundColor: 'white', borderRadius: 15}}>\n                            <DataTable.Header style={{backgroundColor: 'tomato', borderTopLeftRadius:10, borderTopRightRadius:10}}>\n                                <DataTable.Title style={{justifyContent: 'flex-start', flex: 0.5}} numeric>\n                                    <Text style={styles.titles}>ID</Text>\n                                </DataTable.Title>\n\n                                <DataTable.Title style={{justifyContent: 'flex-start', flex: 1.5}}>\n                                    <Text style={styles.titles}>MOVIE NAMES</Text>\n                                </DataTable.Title>\n\n                                <DataTable.Title style={{justifyContent: 'flex-end'}} numeric>\n                                    <Text style={styles.titles}>RELEASE YEAR</Text>\n                                </DataTable.Title>\n                            </DataTable.Header>\n\n                            {movies}\n\n                            <DataTable.Pagination\n                                page={1}\n                                numberOfPages={1}\n                                onPageChange={(page)=>(page)}\n                                label=\"1-5 of 5\"\n                                showFastPagination\n                            />\n                        </DataTable> \n                    </ImageBackground>\n                </View>\n                \n            );\n        }\n    }\n}\n\n\nconst styles = StyleSheet.create ({\n    container: {\n        flex: 1,\n        backgroundColor: '#ffa494',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    item: {\n        margin: 11,\n        borderBottomWidth: 1,\n        borderBottomColor: '#eee',\n        justifyContent: 'flex-start',\n    },\n    titles: {\n        color: 'white',\n        fontSize: 12,\n        fontWeight: '500',\n    },\n});","import * as React from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Icon from 'react-native-vector-icons/Ionicons';\n\nimport HomeScreen from '../screens/HomeScreen';\nimport DataScreen from '../screens/DataScreen';\n\nconst Tab = createBottomTabNavigator();\n\nconst Tabs = () => {\n    return (\n        <Tab.Navigator\n          screenOptions={({ route }) => ({\n            tabBarStyle: { marginBottom: 10, marginTop: 10, borderTopWidth: 0 },\n            tabBarIcon: ({ focused, color, size }) => {\n              let iconName;\n\n              if (route.name === 'HOME') {\n                iconName = focused\n                  ? 'home'\n                  : 'home-outline';\n              } else if (route.name === 'MY WATCHLIST') {\n                iconName = focused \n                ? 'planet' \n                : 'planet-outline';\n              }\n\n              return <Icon name={iconName} size={size} color={color} />;\n            },\n            tabBarActiveTintColor: 'tomato',\n            tabBarInactiveTintColor: 'gray',\n          })}\n        >\n          <Tab.Screen name=\"HOME\" component={HomeScreen} />\n          <Tab.Screen name=\"MY WATCHLIST\" component={DataScreen} options={{ tabBarBadge: 5 }} />\n        </Tab.Navigator>\n    );\n}\n\nexport default Tabs;","import * as React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport Tabs from './navigation/tabs';\n\n\nconst App = () => {\n  return (\n      <NavigationContainer>\n        <Tabs />\n      </NavigationContainer>\n    );\n}\nexport default App;","module.exports = __webpack_public_path__ + \"static/media/background.cec39ddb.png\";"],"sourceRoot":""}